version: 2
jobs:
  build:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_PYTHON=ON -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5
      - run: make
      - run: export GTEST_COLOR=1 && ctest -VV

  test_python:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py test

  build_emscripten:
    docker:
      - image: zondax/qrl-build-images:emscripten
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run: git submodule update --init --recursive

      # Build
      - run: emconfigure cmake -DBUILD_WEBASSEMBLY=ON -DCMAKE_BUILD_TYPE=Release
      - run: emmake make

      # FIXME: Disable .mem for node.js until this gets fixed: https://github.com/kripken/emscripten/issues/2542
      - run: emcc --bind libjsqrl.so -s DISABLE_EXCEPTION_CATCHING=0 -O3 --memory-init-file 0  -o libjsqrl.js
      - run: emcc --bind libjsqrl.so -s DISABLE_EXCEPTION_CATCHING=0 -O3 -s WASM=1 -o web-libjsqrl.js
      - run: echo "QRLLIB=Module;" >> web-libjsqrl.js
       # Fix paths of web-libjsqrl.wasm for web clients
      - run: sed -i 's/web-libjsqrl\.wasm/\/web-libjsqrl\.wasm/g' web-libjsqrl.js

      # Copy to local dir in case it is run locally, the output is shared
      - run: if test -d /tmp/_circleci_local_build_repo; then cp *.js /tmp/_circleci_local_build_repo/tests/js/tmp/; fi
      - run: if test -d /tmp/_circleci_local_build_repo; then cp *.wasm /tmp/_circleci_local_build_repo/tests/js/tmp/; fi
      - run: if test -d /tmp/_circleci_local_build_repo; then chmod 777 /tmp/_circleci_local_build_repo/tests/js/tmp/*; fi
      - run: cp *.js tests/js/tmp/
      - run: cp *.wasm tests/js/tmp/

      # Get node.js and run the tests
      - run: npm -v
      - run: cd tests/js && npm install && npm test

  deploy_pypi:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py test

  deploy_npm:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8.9.1
      steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Authenticate with registry
        command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
    - run:
        name: Publish package
        command: npm publish  

workflows:
  version: 2
  build_all:
    jobs:
      - build
      - test_python
      - build_emscripten
      - deploy_npm:
          requires:
            - build_emscripten
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

