version: 2
jobs:
  build:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_PYTHON=ON -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5
      - run: make
      - run: export GTEST_COLOR=1 && ctest -VV

  test_python:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py test

  build_emscripten:
    docker:
      - image: zondax/qrl-build-images:emscripten
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run:
          name: Update submodules
          command: git submodule update --init --recursive

      - run:
          name: Build webassembly
          command: ./.circleci/build_emscripten.sh

      - run:
          name: Install latest node/npm
          command: ./.circleci/install_node.sh

      - run:
          name: run the tests
          command: cd tests/js && npm install && npm test

  deploy_pypi:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py build sdist
      - run: pip install twine
      - run: twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  deploy_npm:
    docker:
      - image: zondax/qrl-build-images:emscripten
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run:
          name: Update submodules
          command: git submodule update --init --recursive

        # Building again and avoiding complex workspaces until they are supported in the CLI
      - run:
          name: Build webassembly
          command: ./.circleci/build_emscripten.sh

      - run:
          name: Install latest node/npm
          command: ./.circleci/install_node.sh

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > /root/project/.npmrc

      - run:
          name: Update tag
          command: npm --no-git-tag-version version $CIRCLE_TAG

      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  build_all:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test_python:
          filters:
            tags:
              only: /.*/

      - build_emscripten:
          filters:
            tags:
              only: /.*/

      - deploy_pypi:
          requires:
            - build
            - test_python
            - build_emscripten
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/

      - deploy_npm:
          requires:
            - build
            - test_python
            - build_emscripten
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
