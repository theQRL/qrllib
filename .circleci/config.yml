version: 2.1
jobs:
  build:
    docker:
      - image: qrledger/qrl-docker-ci:noble
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_PYTHON=ON .
      - run: make
      - run: export GTEST_COLOR=1 && ctest -VV

  test_rust:
      docker:
        - image: qrledger/qrl-docker-ci:noble
      steps:
        - checkout
        - run:
            name: Setup Rust environment
            command: |
              source ~/.cargo/env || true
              rustc --version
              cargo --version
        - run: source ~/.cargo/env && cargo build -vv
        - run: source ~/.cargo/env && cargo test

  test_python:
    docker:
      - image: qrledger/qrl-docker-ci:noble
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: pip install pytest pytest-cov
      - run: chown $(whoami) *.sh && chmod +x *.sh && ./ci_test.sh

  test_golang:
    docker:
      - image: qrledger/qrl-docker-ci:noble
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: |
          if [ ! -f go.mod ]; then
            go mod init github.com/theQRL/qrllib
          fi
          go get github.com/magiconair/properties@v1.8.7
      - run: cmake -DBUILD_GO=ON .
      - run: make
      - run: cd tests/golang/tests/ && go test -v

  build_emscripten:
    docker:
      - image: qrledger/qrl-docker-ci:noble
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run:
          name: Update submodules
          command: git submodule update --init --recursive

      - run:
          name: Build webassembly
          command: ./.circleci/build_emscripten.sh

      - run:
          name: Install latest node/npm
          command: chmod +x ./.circleci/install_node.sh && chown $(whoami) ./.circleci/install_node.sh && ./.circleci/install_node.sh

      - run:
          name: Install dependencies
          command: cd tests/js && npm install

      - run:
          name: Run Node.js tests
          command: cd tests/js && npm test

      - run:
          name: Run Playwright browser tests
          command: cd tests/js && npm run test:browser

  deploy_pypi:
    docker:
      - image: qrledger/qrl-docker-ci:noble
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py build sdist
      - run: pip install twine
      - run: twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  deploy_npm:
    docker:
      - image: zondax/qrl-build-images:emscripten
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run:
          name: Update submodules
          command: git submodule update --init --recursive

        # Building again and avoiding complex workspaces until they are supported in the CLI
      - run:
          name: Build webassembly
          command: ./.circleci/build_emscripten.sh

      - run:
          name: Install latest node/npm
          command: ./.circleci/install_node.sh

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > /root/project/.npmrc

      - run:
          name: Update tag
          command: npm --no-git-tag-version version $CIRCLE_TAG

      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  build_all:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test_rust:
          filters:
            tags:
              only: /.*/

      - test_python:
          filters:
            tags:
              only: /.*/

      - test_golang:
          filters:
            tags:
              only: /.*/

      - build_emscripten:
          filters:
            tags:
              only: /.*/

      - deploy_pypi:
          requires:
            - build
            - test_python
            - build_emscripten
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/

      - deploy_npm:
          requires:
            - build
            - test_python
            - build_emscripten
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
